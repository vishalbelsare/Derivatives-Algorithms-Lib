// This file is auto-generated by machinist. Please don't modify it manually.
namespace SobolRSG_v1 {
    struct Reader_ : Archive::Reader_ {
        String_ name_;
        double i_path_;
        double n_dim_;
        Reader_(const Archive::View_& src, Archive::Built_& share) {
            using namespace Archive::Utils;
            NOTE("Reading SobolRSG_v1 from store");
            assert(src.Type() == "SobolRSG_v1");
            GetOptional(src, "name", &name_, std::mem_fn(&Archive::View_::AsString));
            Get(src, "i_path", &i_path_, std::mem_fn(&Archive::View_::AsDouble));
            Get(src, "n_dim", &n_dim_, std::mem_fn(&Archive::View_::AsDouble));
        }
        SobolRSG_* Build() const
        {
         return new SobolRSG_(name_, i_path_, n_dim_);
        }
        SobolRSG_* Build(const Archive::View_& src, Archive::Built_& share) const {
            return Reader_(src, share).Build();
        }

        // constructor-through-registry (safer than default constructor)
        Reader_(void (*register_func)(const String_&, const Archive::Reader_*)) {
            register_func("SobolRSG_v1", this);
        }
    };
    static Reader_ TheData(Archive::Register);
}
	